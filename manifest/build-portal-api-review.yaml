apiVersion: v1
kind: Service
metadata:
  annotations:
    app.gitlab.com/app: api-managment
    app.gitlab.com/env: review
  labels:
    app: api-portal
    project: api-management
    tier: frontend
  name: api-portal
  namespace: 
spec:
  ports:
  - name: portal-webapp
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: api-portal
    project: api-management
    tier: frontend
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    app.gitlab.com/app: api-managment
    app.gitlab.com/env: review
  labels:
    app: api-portal
    project: api-management
    tier: frontend
  name: api-portal
  namespace: 
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api-portal
      project: api-management
      tier: frontend
  template:
    metadata:
      annotations:
        app.gitlab.com/app: api-managment
        app.gitlab.com/env: review
      labels:
        app: api-portal
        project: api-management
        tier: frontend
      name: api-portal
    spec:
      containers:
      - image: docker.io/tabeldata/portal-api:aa5a4c87
        imagePullPolicy: IfNotPresent
        name: api-portal
        resources:
          limits:
            cpu: "0.3"
            memory: 500Mi
          requests:
            cpu: "0.1"
            memory: 50Mi
        volumeMounts:
        - mountPath: /etc/nginx/templates/
          name: nginx-config-volume
      restartPolicy: Always
      volumes:
      - configMap:
          items:
          - key: template
            path: default.conf.template
          name: nginx-config
          optional: false
        name: nginx-config-volume
